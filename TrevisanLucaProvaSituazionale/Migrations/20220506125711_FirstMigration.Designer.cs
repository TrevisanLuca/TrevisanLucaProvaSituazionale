// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrevisanLucaProvaSituazionale.Data;

#nullable disable

namespace TrevisanLucaProvaSituazionale.Migrations
{
    [DbContext(typeof(ProgettoCinemaDbContext))]
    [Migration("20220506125711_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cinema Quattro Stagioni"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cinema Dante"
                        });
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.CinemaHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("MaxSpectators")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("FilmId");

                    b.ToTable("CinemaHalls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            FilmId = 1,
                            MaxSpectators = 50,
                            Name = "Primavera"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            FilmId = 2,
                            MaxSpectators = 60,
                            Name = "Estate"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 1,
                            FilmId = 1,
                            MaxSpectators = 20,
                            Name = "Autunno"
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 1,
                            FilmId = 2,
                            MaxSpectators = 15,
                            Name = "Inverno"
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 2,
                            FilmId = 1,
                            MaxSpectators = 100,
                            Name = "Inferno"
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 2,
                            FilmId = 2,
                            MaxSpectators = 150,
                            Name = "Purgatorio"
                        },
                        new
                        {
                            Id = 7,
                            CinemaId = 2,
                            FilmId = 1,
                            MaxSpectators = 10,
                            Name = "Paradiso"
                        });
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Peter Jackson",
                            Genre = "Fantasy",
                            Length = 180,
                            Producer = "New Line Cinema",
                            Title = "Lord of the Rings"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Gore Verbinski",
                            Genre = "Horror",
                            Length = 90,
                            Producer = "Hiroshi Takahashi",
                            Title = "The Ring"
                        });
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Spectator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CinemaHallId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaHallId");

                    b.HasIndex("TicketId")
                        .IsUnique()
                        .HasFilter("[TicketId] IS NOT NULL");

                    b.ToTable("Spectators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaHallId = 1,
                            DateOfBirth = new DateTime(1950, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mario",
                            Surname = "Bianchi",
                            TicketId = 1
                        },
                        new
                        {
                            Id = 2,
                            CinemaHallId = 1,
                            DateOfBirth = new DateTime(1988, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giuseppe",
                            Surname = "Rossi",
                            TicketId = 2
                        },
                        new
                        {
                            Id = 3,
                            CinemaHallId = 6,
                            DateOfBirth = new DateTime(1998, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miriam",
                            Surname = "Verdi",
                            TicketId = 3
                        },
                        new
                        {
                            Id = 4,
                            CinemaHallId = 3,
                            DateOfBirth = new DateTime(2007, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giovanna",
                            Surname = "Neri",
                            TicketId = 4
                        });
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaHallId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaHallId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaHallId = 1,
                            Position = 1,
                            Price = 10m
                        },
                        new
                        {
                            Id = 2,
                            CinemaHallId = 1,
                            Position = 2,
                            Price = 10m
                        },
                        new
                        {
                            Id = 3,
                            CinemaHallId = 6,
                            Position = 1,
                            Price = 10m
                        },
                        new
                        {
                            Id = 4,
                            CinemaHallId = 3,
                            Position = 1,
                            Price = 10m
                        });
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.CinemaHall", b =>
                {
                    b.HasOne("TrevisanLucaProvaSituazionale.Domain.Cinema", "Cinema")
                        .WithMany("CinemaHalls")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrevisanLucaProvaSituazionale.Domain.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId");

                    b.Navigation("Cinema");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Spectator", b =>
                {
                    b.HasOne("TrevisanLucaProvaSituazionale.Domain.CinemaHall", "CinemaHall")
                        .WithMany("Spectators")
                        .HasForeignKey("CinemaHallId");

                    b.HasOne("TrevisanLucaProvaSituazionale.Domain.Ticket", "Ticket")
                        .WithOne("Spectator")
                        .HasForeignKey("TrevisanLucaProvaSituazionale.Domain.Spectator", "TicketId");

                    b.Navigation("CinemaHall");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Ticket", b =>
                {
                    b.HasOne("TrevisanLucaProvaSituazionale.Domain.CinemaHall", "CinemaHall")
                        .WithMany()
                        .HasForeignKey("CinemaHallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CinemaHall");
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Cinema", b =>
                {
                    b.Navigation("CinemaHalls");
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.CinemaHall", b =>
                {
                    b.Navigation("Spectators");
                });

            modelBuilder.Entity("TrevisanLucaProvaSituazionale.Domain.Ticket", b =>
                {
                    b.Navigation("Spectator");
                });
#pragma warning restore 612, 618
        }
    }
}
